Users table:
Column deleted: 


ALTER TABLE "users" DROP "name_first";
ALTER TABLE "users" DROP "name_last";
ALTER TABLE "users" DROP "password_hash";
ALTER TABLE "users" DROP "email";
ALTER TABLE "users" DROP "password_salt";
ALTER TABLE "users" DROP "asset_cache";
ALTER TABLE "users" DROP "karma";
ALTER TABLE "users" DROP "linked_in_token";
ALTER TABLE "users" DROP "facebook_token";
ALTER TABLE "users" DROP "opt_out_email";
ALTER TABLE "users" DROP "default_trade_preference";
ALTER TABLE "users" DROP "status";
ALTER TABLE "users" DROP "api_key";
ALTER TABLE "users" DROP "wants_market_alret_emails" ;
ALTER TABLE "users" DROP "wants_admin_emails" ;
ALTER TABLE "users" DROP "wants_daily_digest_emails" ;
ALTER TABLE "users" DROP "about_me";
ALTER TABLE "users" DROP "wants_question_resolution_emails";


User_roles Table : 
ALTER TABLE "user_roles" DROP "is_permanent";
ALTER TABLE "user_roles" DROP "invitation_display";
ALTER TABLE "user_roles" DROP "is_public";
ALTER TABLE "user_roles" DROP "is_selectable";
ALTER TABLE "user_roles" DROP "image_uri";
ALTER TABLE "user_roles" DROP "messages";
ALTER TABLE "user_roles" DROP "kind";
ALTER TABLE "user_roles" DROP "short_description";


Auth_attempts
ALTER TABLE auth_attempts" DROP "name_first";






ALTER TABLE "user_badges" DROP "image_uri";




















SELECT COUNT (user_id) FROM historical_trades


copy ( SELECT COUNT (historical_trades.question_id), historical_trades.question_id FROM historical_trades JOIN questions ON historical_trades.question_id = questions.question_id WHERE  settled_at IS NOT NULL  GROUP BY historical_trades.question_id, questions.question_id ORDER BY questions.question_id) TO '/Users/amir/downloads/tradeeachquestion.csv' DELIMITER ',' CSV HEADER; 




CREATE TABLE numberoftradesbinaryquestions ( NumberofTrades INT , question_id INT )


COPY numberoftradesbinaryquestions(NumberofTrades,question_id) 
FROM '/Users/amir/downloads/NumberofQuestions.csv' DELIMITER ',' CSV HEADER;


COPY (SELECT qbs.question_id , qbs.qbs, qbs.difftime_tradedays, numberoftradesbinaryquestions.numberoftrades FROM qbs JOIN numberoftradesbinaryquestions ON qbs.question_id = numberoftradesbinaryquestions.question_id ) TO '/Users/amir/downloads/QBSTRADESLINEAR.csv' DELIMITER ',' CSV HEADER;


COPY (SELECT question_id , question_category_links.category_id , name FROM question_categories JOIN question_category_links ON question_categories.category_id = question_category_links.category_id )TO '/Users/amir/downloads/QuestionCategoriesname.csv' DELIMITER ',' CSV HEADER;


COPY (SELECT id , interests FROM users WHERE interests IS NOT NULL ) TO '/Users/amir/downloads/userinterests.csv' DELIMITER ',' CSV HEADER;


SELECT trade_brier_score.trade_id , tbs , trade_brier_score.question_id FROM trade_brier_score JOIN historical_trades ON trade_brier_score.trade_id = historical_trades.trade_id JOIN questions ON questions.question_id =  historical_trades.question_id WHERE user_id = 176 AND type='binary'


SELECT trade_brier_score.trade_id ,  historical_trades.question_id ,  historical_trades.created_at, asset_resolution , tbs FROM historical_trades JOIN trade_brier_score ON trade_brier_score.trade_id =historical_trades.trade_id WHERE user_id = 176 AND asset_resolution IS NOT NULL  ORDER BY historical_trades.question_id


SELECT question_id , name, created_at , type , settled_at , serialized_settled_values FROM questions ORDER BY question_id 


COPY ( SELECT user_id , SUM (asset_resolution ) AS SUM_OF_Gains FROM historical_trades  WHERE asset_resolution IS NOT NULL GROUP BY  user_id   ORDER BY  SUM (asset_resolution ) DESC ) TO '/Users/amir/downloads/gainsbyuser.csv' DELIMITER ',' CSV HEADER;




CREATE TABLE gains by USER ( user_id INT , sum_of_gains Flot